name: Build then Push to Docker Registry

# Trigger on push to master or merge to master from PR
on:
  pull_request:
    branches: [ master ]
  push:
    branches: [ master ]
    
# A workflow run is made up of one or more jobs that can run sequentially (with needs) or in parallel
jobs:
  # We use 2 jobs: continous-integrations and docker-build
  # docker-build will run after continous-integrations success

  continous-integrations:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Run your CI script before build docker image  
      - name: Build and Test
        run: # make install && \
             # make test && \
             # make coverage && \
             # make cleanup \
             echo "Simulate install, test and build"

  docker-build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Make sure the code is tested before build docker
    needs: continous-integrations

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
 
      # Create and gather metadata
      - name: Get Repo metadata
        id: repo
        uses: actions/github-script@v3
        with:
          script: |
            const repo = await github.repos.get(context.repo)
            return repo.data

      - name: Prepare Version and Tag
        id: prep
        env:
          ORGANIZATION: tegar.com # example 
          APP_NAME: simple # example 
        run: |
          set -ex
          VERSION=$(git describe --tags --abbrev=0) # will fail if never tagged
          # VERSION=$(cat VERSION)
          #
          DOCKER_IMAGE=${ORGANIZATION}/${APP_NAME}
          #
          # ------------------
          # Check by event_name
          # if [ "${{ github.event_name }}" = "release" ]; then
          #   TAGS=${DOCKER_IMAGE}:$VERSION
          # ------------------
          #
          # Check by branch
          if [[ ${GITHUB_REF#refs/heads/} == 'master' ]]; then
            TAGS=${DOCKER_IMAGE}:$VERSION
            # e.g: tegar.com/simple:0.1.0
          else # if in pull request
            TAGS=${DOCKER_IMAGE}:$VERSION-dev-${GITHUB_SHA::8}
            # e.g: tegar.com/simple:0.1.0-dev-1234abcd
          fi
          
          echo ${VERSION}
          echo ${TAGS}
          
